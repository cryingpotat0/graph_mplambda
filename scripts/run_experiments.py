import os, time, subprocess
from functools import reduce

starts = [[0.201046354657216, -0.498794712940752, -0.46997820806098, 0.383476005765817, -1.62054231450741, 0.275555806646242, 0.0946758712721159, 2.24358280398006],
[0.115368692562692, -0.445314228868808, 0.0963735806867418, -1.27016578588354, -0.967086631735602, 2.66528726389368, 0.556858793495702, 1.60240973636245],
[0.139831556721525, 0.759271929076082, 0.201556195547314, -0.484104715725937, -2.12029373509578, 2.57134155795376, -1.67538426226056, 3.01697448830681],
[0.265605054307725, -0.0406835434103203, 0.794652977451368, 0.557126184096162, 0.128090244287742, -0.278693634784349, 1.41827116528597, 2.32724198527326],
[0.23381020844656, 1.45648483488815, 1.4929787456749, 2.3063739960737, 0.64878909206156, 0.657563607266227, 1.78281764532597, -0.20735587150957],
[0.321441237503027, 1.46708311573917, 0.503881132531543, -0.906503034349056, -0.795844068853335, -2.74375353968961, -0.948066363021766, -1.52691201354791],
[0.34529600622738, -1.23026860284713, 0.571034997136581, -2.97475900119163, -0.96454711244822, 0.702692815925102, -0.58016987053878, -1.3749651066112],
[0.348251912818693, 0.857482139396653, -0.868182415362813, -1.38659795236808, -1.67306880274813, 2.44314001299847, 1.32103302615282, -0.623311300998885],
[0.127106408451682, 0.296232230941623, 1.04180281931571, -0.207161983361287, -1.05093069141864, 1.93207830145142, -1.60737483189966, -0.831110912689584],
[0.143329632165137, -0.845592815411368, -0.785670533257555, -2.90991127435503, -1.80331904462047, 1.15575380297583, 1.95318185620889, 1.80393085782257],
[0.267259836704116, -1.3290661469169, -0.239493471101844, -1.3425147752827, -1.82637111302761, 2.78726246375308, -0.120136757782221, 0.124171653514422],
[0.258689500240738, -0.638741313290659, -0.340352449066325, -2.42704455444847, 0.859617967852464, -1.06694972172585, 1.29067054311535, 1.7767285245185],
[0.141854837771701, -1.00494000985811, 0.174876648883185, -0.451941967433952, 1.23981136430659, -3.04579963246683, 0.0948442296776806, -2.78883846616237],
[0.152665020458081, 0.289434428970899, 0.366096258792135, 2.74997944369863, 1.08232221444816, -1.61963871941389, 0.0843414754844334, -2.42602847565961],
[0.339826762723352, -1.30895296794471, -0.791704366566936, 3.01585290457046, -1.67428897876619, -1.13049672479368, 1.76633735067612, -0.158584020748358],
[0.0775970605172425, 0.998439137947507, 0.208005843146859, 0.366034598233787, -0.867845714574326, -0.815653903008816, 0.29494203740015, 1.43653954964438],
[0.252837015294025, -0.606251092237807, 0.845027114214161, 2.58374368689819, 2.2448268517385, 2.47134652207135, 1.20798529001607, 1.2156791409268],
[0.0984416507460425, 0.902578953040868, 1.44026345390896, -0.597036413241875, -1.35665388248141, 2.86210577896741, 1.43610384769603, -1.52394683731949],
[0.286093687972178, -1.44369824762342, -0.0481009251598654, -0.474462539866498, -0.912188383857106, 2.66636538877806, -0.455061349427888, 0.483050895913263],
[0.37724685896517, 0.162246270449604, 0.341650770565467, 2.53395855564833, -2.0152528112263, -0.114407284204447, 1.52012922738177, -2.56992411186859]
]


goals = [[0.23500702335257, -0.51331827548709, 1.08889918323223, -2.82118665601136, 1.45199636598609, -0.381020098189353, 1.83714263789412, 2.5302840847238],
[0.166389465208268, 0.994697179130596, -0.861081579579146, 2.04548282000891, 0.636432005979989, -2.50325628436431, 1.44339011980036, -1.0587051344136],
[0.372879525774064, 0.272552524293422, 0.194664241316707, 2.27893917490013, 0.767189538451539, -0.244863191591799, -1.65749928574775, -1.27261215788057],
[0.19965532358974, -0.914296580639763, 0.0555005254672658, -1.27545574068078, 0.793892137858515, -1.29548100025926, 0.83761437804936, -1.6809734241684],
[0.290008675590251, 1.45795360874663, 0.429055094373059, 1.5260143757697, -1.95934459910248, -2.05955977132615, 1.4256641774962, -1.22082521670092],
[0.0985464461722397, 0.867047769235529, -0.00834021640082749, 0.263529704849975, -1.59424275337495, -1.07218189416204, 0.667337269431501, -2.20065636483545],
[0.348731478141029, 1.02562160132338, -0.208323727306115, 1.25926833666231, 0.360494361146469, -0.124322535042548, -0.261175123047625, -2.98617014484899],
[0.120656069134578, 0.246386436907285, -0.236105405061821, 0.390376490647538, 1.68292539317809, -2.8872573812098, -0.840781179828177, -0.398942815402274],
[0.345911530470613, -1.42646409088026, 0.594280724564271, -2.09668391648691, -1.28867019485091, -0.470006847829064, -1.13061996279293, -2.97719082852237],
[0.288033613066349, 0.640874460930641, 1.08857760828722, 1.87646902092695, 0.692024488981347, -3.08935203312417, 0.0137807015862865, -0.0106186507425563],
[0.124191456374892, -1.30840760077058, 0.169415308658094, 1.05843869105924, 0.508651076967243, 1.92633533466402, 0.966305864790548, 2.41716243787387],
[0.338715074974889, -0.331593213308971, -0.838483189320676, 1.19235152005713, -1.91666713569869, -2.02177631799085, 1.46348415650333, -2.61368492835524],
[0.313586497681954, -0.814740524519169, 0.847346718489035, -0.741191056360952, -1.11317365640993, 2.05775428387428, -0.867275685671519, -2.50979341582775],
[0.284434324544411, -0.925529520697926, 0.735150481178624, 0.697408926742709, 0.915210961699366, -1.76139169169774, -0.736350022158431, -0.705924493085933],
[0.125983352666418, -1.56728402098082, -0.187478637448808, -1.61308816626076, -2.02667646127191, 2.07498154055615, -2.13553405276159, 2.40034463587436],
[0.0932225504296781, 1.50261717431406, -0.491389403661628, 2.41998559506886, 0.684304499919131, -0.302694035745994, 0.0423180783878334, -1.24534869899643],
[0.33751992244941, 0.501825137613311, -0.143217079907909, -0.419602482703619, 2.17232736054396, 1.24054546020525, 1.49462304626176, 1.06760670708938],
[0.296443888363547, 0.553132024843363, -0.0428434140036051, -2.21264506997253, 0.246771249809541, 0.630854310273898, -1.54504510398897, 0.455574833585567],
[0.349602803035124, -0.0758079054793996, -0.753715300309163, 2.01248038616432, 1.14974536988761, -0.546194339765207, 2.06977657354493, -1.10893002419776],
[0.282075109601095, 1.56035298950601, 0.26405885772766, 2.86797948301586, 0.646327444401505, -0.803785895225816, -1.61956043491831, 1.0931161457621]
]



if __name__ == "__main__":
    #time_limits = [5, 10, 20] #, 2, 3]
    time_limits = [1] #[0.2, 0.5, ]#1]
    num_samples = [1, ] #10, 20, 40]
    num_divisions = [
        #(0,0),
        #(1,1),
        #(2,2),
        (0,0,0,0,0,0,0,0),  #1
        #(1,0,0,0,0,0,0,0),  #2
        #(1,1,0,0,0,0,0,0),  #4
        #(2,1,0,0,0,0,0,0),  #6
        (1,1,1,0,0,0,0,0),  #8
        #(1,1,1,1,1,0,0,0),  #32
        #(1,1,1,1,1,1,0,0),  #64
        #(1,1,1,1,1,1,1,0),  #128

    ]
    num_trials = 1
    for time_limit in time_limits:
        for num_sample in num_samples:
            for num_division_tup in num_divisions:
                for trial in range(num_trials):
                    
                    num_lambdas = reduce(lambda a,b: (a) * (b), [val + 1 for val in num_division_tup])
                    num_division = reduce(lambda a,b: "{},{}".format(a,b), num_division_tup)
                    #num_sample = num_sample_for_one // num_lambdas
                    file_name = "outputs/num_divisions={num_divisions}__num_lambdas={num_lambdas}__time_limit={time_limit}__trial={trial}__num_samples={num_samples}.txt".format(num_divisions=num_division, trial=trial, time_limit=time_limit, num_lambdas=num_lambdas, num_samples=num_sample)
                    if os.path.exists(file_name): continue
                    command = "PI=3.141592653589793 ;PI_2=1.570796326794897; make -j8; ./mpl_coordinator --scenario fetch --goal-radius 0.01,0.01,0.01,0.01,0.01,$PI --env-frame 0.57,-0.90,0.00,0,0,-$PI_2 --env resources/AUTOLAB.dae --global_min 0,-1.6056,-1.221,-$PI,-2.251,-$PI,-2.16,-$PI --global_max 0.38615,1.6056,1.518,$PI,2.251,$PI,2.16,$PI " 
                    for (start, goal) in zip(starts, goals):
                        command += " --start "
                        for i, s in enumerate(start):
                            command += str(s)
                            if i != len(start) - 1: command += ","
                        command += " --goal "
                        for i, g in enumerate(goal):
                            command += str(g)
                            if i != len(goal) - 1: command += ","
                    #command += " --lambda_type aws --coordinator 54.188.233.199 --num_samples {num_samples} --num_divisions {num_divisions} --time-limit {time_limit} &> {file_name}".format(num_samples=num_sample, num_divisions=num_division, time_limit=time_limit, file_name=file_name)
                    command += " --lambda_type local --coordinator localhost --num_samples {num_samples} --num_divisions {num_divisions} --time-limit {time_limit} ".format(num_samples=num_sample, num_divisions=num_division, time_limit=time_limit, )

                    #command = "rm -f png_2d_demo_output*; make -j8; ./mpl_coordinator --scenario png --global_min 0,0 --global_max 1403,1404 --env resources/house_layout.png --start 1301,332 --goal 600,1034 --start 977,1140 --goal 275,87 --start 249,683 --goal 789,709 --start 1328,438 --goal 533,822 --start 695,919 --goal 357,142 --start 797,196 --goal 884,1173 --start 828,327 --goal 446,898 --start 962,1140 --goal 82,478 --start 275,789 --goal 952,339 --start 772,1307 --goal 6,394 --lambda_type local --coordinator localhost --num_samples {num_samples} --num_divisions {num_divisions} --time-limit {time_limit} &> {file_name}".format(num_samples=num_sample, num_divisions=num_division, time_limit=time_limit, file_name=file_name)
                    #command = "rm -f png_2d_demo_output*; rm -f lambda-*; make -j8; ./mpl_coordinator --scenario png --global_min 0,0 --global_max 1403,1404 --env resources/house_layout.png --start 1301,332 --goal 600,1034 --start 977,1140 --goal 275,87 --start 249,683 --goal 789,709 --start 1328,438 --goal 533,822 --start 695,919 --goal 357,142 --start 797,196 --goal 884,1173 --start 828,327 --goal 446,898 --start 962,1140 --goal 82,478 --start 275,789 --goal 952,339 --start 772,1307 --goal 6,394 --lambda_type local --coordinator localhost --num_samples {num_samples} --num_divisions {num_divisions} --time-limit {time_limit}".format(num_samples=num_sample, num_divisions=num_division, time_limit=time_limit, )
                    #command = "rm -f png_2d_demo_output*; make -j8; ./mpl_coordinator --scenario png --global_min 0,0 --global_max 1403,1404 --env resources/house_layout.png --start 1301,332 --goal 600,1034 --start 977,1140 --goal 275,87 --start 249,683 --goal 789,709 --start 1328,438 --goal 533,822 --start 695,919 --goal 357,142 --start 797,196 --goal 884,1173 --start 828,327 --goal 446,898 --start 962,1140 --goal 82,478 --start 275,789 --goal 952,339 --start 772,1307 --goal 6,394 --lambda_type aws --coordinator 54.188.233.199 --num_samples {num_samples} --num_divisions {num_divisions} --time-limit {time_limit} &> {file_name}".format(num_samples=num_sample, num_divisions=num_division, time_limit=time_limit, file_name=file_name)
                    print(command)
                    print(file_name)
                    #subprocess.call('ls')
                    subprocess.call(command, shell=True, stderr=open(file_name, 'w'))
                    subprocess.call("mkdir {folder_name}; mv lambda-* {folder_name}".format(folder_name=file_name[:-4]), shell=True)
                    #move_cmd = "mkdir {folder_name}; mv png* {folder_name}".format(folder_name=file_name[:-4])
                    #print(move_cmd)
                    #subprocess.call("mkdir {folder_name}; mv png* {folder_name}; mv lambda-* {folder_name}".format(folder_name=file_name[:-4]), shell=True)
                    #os.system(command)
                    #exit(1)
                    print("-------------------------------------------------------------------------------------")
                    time.sleep(2) 
                    #import ipdb; ipdb.set_trace()

#### fetch stuff
